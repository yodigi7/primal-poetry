const s=location.pathname.split("/").slice(0,-1).join("/"),r=[s+"/_app/immutable/entry/app.CxqZZRTS.js",s+"/_app/immutable/nodes/0.Blu40SLN.js",s+"/_app/immutable/assets/0.DzZclavS.css",s+"/_app/immutable/nodes/1.Db_-AHvE.js",s+"/_app/immutable/nodes/2.DxEbRaXT.js",s+"/_app/immutable/assets/2.BxUWIdNI.css",s+"/_app/immutable/nodes/3.b8gfQSe5.js",s+"/_app/immutable/nodes/4.BvA8W40Z.js",s+"/_app/immutable/assets/4.DL1mT4KP.css",s+"/_app/immutable/nodes/5.DvOIf0tr.js",s+"/_app/immutable/assets/5.CZ63Z4TW.css",s+"/_app/immutable/chunks/attributes.CqKKJ46u.js",s+"/_app/immutable/chunks/disclose-version.DiQWVNdw.js",s+"/_app/immutable/chunks/entry.DZderCZZ.js",s+"/_app/immutable/chunks/events.CwpXpTVr.js",s+"/_app/immutable/chunks/gameState.DBlerAt4.js",s+"/_app/immutable/chunks/if.u8gU_TQf.js",s+"/_app/immutable/chunks/index-client.Br8p-eIL.js",s+"/_app/immutable/chunks/index.CNdVUOjN.js",s+"/_app/immutable/chunks/legacy.fiHPvv0E.js",s+"/_app/immutable/chunks/paths.BmbQ4qLK.js",s+"/_app/immutable/chunks/render.VOJNs8tS.js",s+"/_app/immutable/chunks/runtime.CHsQcZc1.js",s+"/_app/immutable/chunks/scoreStore.CCpZMhbG.js",s+"/_app/immutable/chunks/settingStore.Dl21bKF3.js",s+"/_app/immutable/chunks/store.BAJ648UJ.js",s+"/_app/immutable/entry/start.Ca9RMKDP.js"],b=[s+"/favicon.png",s+"/manifest.json"],d="1736213506913",p=`primal-poetry-v${d}`,l="fonts-v1",_=[p,l],o=[...r,...b],j=["https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Rock+Salt&display=swap"];self.addEventListener("install",a=>{async function n(){const e=await caches.open(p);await(await caches.open(l)).addAll(j),await e.addAll(o)}a.waitUntil(n())});self.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(n=>Promise.all(n.filter(e=>!_.includes(e)).map(e=>caches.delete(e)))))});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const e=new URL(a.request.url);if(o.includes(e.pathname)){const u=await(await caches.open(p)).match(e.pathname);if(u)return u}const c=await caches.open(l),m=c.match(a.request),i=fetch(a.request),h=i.then(t=>t.clone());return a.waitUntil(Promise.all(h).then(t=>c.put(a.request,t)).catch(()=>{})),await Promise.race([i.catch(()=>m),m]).then(t=>t||i).catch(()=>new Response(null,{status:404}))}a.respondWith(n())});
